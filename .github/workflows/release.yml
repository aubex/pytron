name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Triggers on tags like v1.0.0
      - "v[0-9]+.[0-9]+.[0-9]+-*" # Triggers on tags like v1.0.0-pre, v1.0.0-alpha, etc.

permissions:
  contents: write # Required for creating releases

jobs:
  build-and-release:
    name: Build and Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_ext: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Install musl tools (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Prepare binary
        shell: bash
        run: |
          BINARY_NAME="pytron"
          VERSION=${GITHUB_REF#refs/tags/}
          OUTPUT_NAME="${BINARY_NAME}-${VERSION}-${{ matrix.target }}${{ matrix.binary_ext }}"
          
          # Copy binary to a properly named file
          cp "target/${{ matrix.target }}/release/${BINARY_NAME}${{ matrix.binary_ext }}" "$OUTPUT_NAME"
          
          # Set as asset to upload
          echo "ASSET=$OUTPUT_NAME" >> $GITHUB_ENV

      - name: Check if tag is prerelease
        id: check_prerelease
        shell: bash
        run: |
          if [[ $GITHUB_REF == *"-"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}