name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Triggers on tags like v1.0.0
      - "v[0-9]+.[0-9]+.[0-9]+-*" # Triggers on tags like v1.0.0-pre, v1.0.0-alpha, etc.

permissions:
  contents: write # Required for creating releases

jobs:
  build-and-release:
    name: Build and Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz
            binary_ext: ""
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
            binary_ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
            binary_ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          BINARY_NAME="pytron"
          VERSION=${GITHUB_REF#refs/tags/}
          DIRNAME="${BINARY_NAME}-${VERSION}-${{ matrix.target }}"
          mkdir "$DIRNAME"
          
          # Move binary to directory
          mv "target/${{ matrix.target }}/release/${BINARY_NAME}${{ matrix.binary_ext }}" "$DIRNAME/"
          
          # Create archive
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r "${DIRNAME}.zip" "$DIRNAME"
            echo "ASSET=${DIRNAME}.zip" >> $GITHUB_ENV
          else
            tar -czf "${DIRNAME}.tar.gz" "$DIRNAME"
            echo "ASSET=${DIRNAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Check if tag is prerelease
        id: check_prerelease
        shell: bash
        run: |
          if [[ $GITHUB_REF == *"-"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
          draft: false
          prerelease: ${{ env.IS_PRERELEASE }}